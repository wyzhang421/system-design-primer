Category,Prompt Name,Prompt Template,Use Cases,Example Topics
Deep Dive Analysis,Understand System Components,"Help me understand [system/component] by explaining: - What it does and why it's needed - How the code files implement the core concepts - How to operate/test the key functionality - What interview questions this would help me answer","Learning specific technologies and implementations","Elasticsearch, Redis, Load Balancers, Microservices"
Hands-On Implementation,Practical Learning Setup,"I want to learn [system design concept] practically. Can you help me: - Set up a working example I can run locally - Walk through the key implementation files - Show me how to test different scenarios - Explain what this teaches me for interviews","Building working examples of concepts","Caching strategies, Database sharding, API design"
Interview Simulation,Practice Design Problems,"Help me practice system design interviews by: - Presenting a [specific system] design problem - Walking through the solution step-by-step - Explaining the trade-offs and alternatives - Giving me follow-up questions an interviewer might ask","Mock interview practice","Design Twitter, Design Uber, Design Netflix"
Architecture Deep Dive,Study Existing Systems,"I'm studying [existing system/codebase]. Help me: - Understand the overall architecture and components - Identify the key design patterns and why they're used - Learn what scale/performance problems this solves - Extract reusable patterns for interview discussions","Learning from real systems","Large codebases, open-source systems, reference architectures"
Concept to Code,Theory to Practice Bridge,"Help me bridge theory to practice for [system design concept]: - Explain the high-level concept and when to use it - Show me a concrete implementation example - Walk through how to set it up and test it - Connect it to common interview scenarios","Understanding abstract concepts through code","CAP theorem, Eventual consistency, Rate limiting"
Scaling Scenarios,Understand Scale Challenges,"I want to understand how [system] handles scale. Help me: - Start with a simple implementation - Identify bottlenecks as traffic increases - Walk through scaling solutions step-by-step - Explain the trade-offs at each scaling stage","Learning scaling patterns","Database scaling, Microservices, CDN usage"
Trade-offs Analysis,Compare Design Decisions,"Help me understand the trade-offs in [design decision] by: - Explaining the different approaches available - Showing when each approach is better - Demonstrating with concrete examples/code - Connecting to real interview questions","Understanding design choices","SQL vs NoSQL, Sync vs Async, Monolith vs Microservices"
End-to-End Journey,Trace System Flows,"Walk me through a complete [user journey/data flow] in [system]: - Trace the request from start to finish - Explain each component's role and implementation - Show me how to test this flow locally - Identify potential failure points and solutions","Understanding system interactions","User authentication flow, Payment processing, Search queries"
Problem Debugging,Troubleshoot and Learn,"I'm having [specific issue] with [system/setup]. Help me: - Diagnose what's going wrong and why - Fix the immediate problem - Understand the underlying concepts better - Learn how this relates to production system design","Fixing issues while learning","Configuration issues, Performance problems, Integration challenges"
Interview Readiness,Comprehensive Preparation,"Help me prepare for system design interviews by: - Creating a study plan for [specific topic/timeline] - Organizing the most important concepts to learn - Setting up hands-on projects I can reference - Giving me a checklist to track my progress","Overall interview preparation","Study planning, Progress tracking, Knowledge organization"